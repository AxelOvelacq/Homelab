---
- name: Create user {{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}
  ansible.builtin.user:
    name: "{{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}"
    groups: "{{ ssh_users_group }}"
    append: yes
    password: "{{ item.password | default(omit) }}"
    create_home: "{{ item.create_home | default(omit) }}"
    hidden: "{{ item.hidden_user | default(omit) }}"

- name: Create file to store sshd authorized keys
  file:
    path: "{{ ssh_authorized_keys_file }}"
    state: touch
    owner: "{{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}"
    group: "{{ ssh_users_group }}"
    mode: '0660'

- name: Add SSH public keys
  ansible.posix.authorized_key:
    path: "{{ ssh_authorized_keys_file }}"
    user: "{{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}"
    key: "{{ lookup('file', pkey | replace('file:', '')) }}"
    state: present
  loop: "{{ item.public_keys }}"
  loop_control:
    loop_var: pkey
  when: pkey is match('^file:')

- name: Add SSH public keys from direct string
  ansible.posix.authorized_key:
    path: "{{ ssh_authorized_keys_file }}"
    user: "{{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}"
    key: "{{ pkey }}"
    state: present
  loop: "{{ item.public_keys }}"
  loop_control:
    loop_var: pkey
  when: pkey is not match('^file:')

# - name: Show added keys from direct string
#   debug:
#     msg: "{{ pkey }}"
#   loop: "{{ item.public_keys }}"
#   loop_control:
#     loop_var: pkey
#   when: pkey is not match('^file:')

# - name: Sohw added keys from file
#   debug:
#     msg: "{{ lookup('file', pkey | replace('file:', '')) }}"
#   loop: "{{ item.public_keys }}"
#   loop_control:
#     loop_var: pkey
#   when: pkey is match('^file:')

