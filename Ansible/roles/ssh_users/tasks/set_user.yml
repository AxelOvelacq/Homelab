---
- name: Create user {{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}
  ansible.builtin.user:
    name: "{{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}"
    groups: "{{ ssh_users_group }}"
    append: yes
    password: "{{ item.password | default(omit) }}"
    create_home: "{{ item.create_home | default(omit) }}"
    hidden: "{{ item.hidden_user | default(omit) }}"

- name: Create file to store sshd authorized keys
  file:
    path: "{{ ssh_authorized_keys_file }}"
    state: touch
    owner: "{{ (item.name == 'current_user') | ternary(lookup('env', 'USER'), item.name) }}"
    group: "ssh_users_group"
    mode: '0660'

# - name: Add public keys to authorized_keys file
#   lineinfile:
#     path: "{{ ssh_authorized_keys_file }}"
#     line: "{{ key }}"
#   loop: "{{ item.public_keys }}"
#   loop_control:
#     loop_var: key
#   when: item.public_keys is defined

- name: Add SSH public keys
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('file', item_key) }}"
    state: present
  loop: "{{ ssh_users | subelements('public_keys') }}"
  vars:
    item_key: "{{ item.1 }}"
  when: item.1 is match('^file:')

- name: Add SSH public keys from direct string
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
    state: present
  loop: "{{ ssh_users | subelements('public_keys') }}"
  when: item.1 is not match('^file:')